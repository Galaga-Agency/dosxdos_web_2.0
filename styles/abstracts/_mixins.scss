// These mixins are sort of functions i use to map through the sort of variable arrays i have in _variables.scss, and make the syntax easier to use throughout the app
// For example, without mixin, for font-size, i would need to write font-size: map-get($font-size, 2xl); but with mixin, i can just write @include font-size(2xl);, 
// which is much easier to read and write
// some other mixins are for redudant css code i wanted to avoid, such as flex, flex-driection etc which tend to always come together

@use '../abstracts/variables' as *;

// -----------------------------------------------------------------------------
// Spacing
// Usage: padding: spacing(sm);
// -----------------------------------------------------------------------------
@mixin spacing($size, $property: padding) {
    #{$property}: map-get($spacing, $size);
}

// -----------------------------------------------------------------------------
// Container width
// Usage: max-width: container-width(max);
// -----------------------------------------------------------------------------
@mixin container-width($size, $property: max-width) {
    #{$property}: map-get($container, $size);
}

// -----------------------------------------------------------------------------
// Media query (mobile-first)
// Usage: @include min-width(md) { ... }
// -----------------------------------------------------------------------------
@mixin min-width($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }

    @else {
        @warn "Unknown breakpoint: `#{$breakpoint}`. Available: #{map-keys($breakpoints)}.";
    }
}

// -----------------------------------------------------------------------------
// Z-index
// Usage: @include z-index(modal);
// -----------------------------------------------------------------------------
@mixin z-index($layer) {
    z-index: map-get($z-index, $layer);
}

// -----------------------------------------------------------------------------
// Border radius
// Usage: @include border-radius(md);
// -----------------------------------------------------------------------------
@mixin border-radius($size) {
    border-radius: map-get($radius, $size);
}

// -----------------------------------------------------------------------------
// Transition duration
// Usage: @include transition-duration(normal);
// -----------------------------------------------------------------------------
@mixin transition-duration($speed) {
    transition-duration: map-get($durations, $speed);
}

// -----------------------------------------------------------------------------
// Font size
// Usage: @include font-size(2xl);
// -----------------------------------------------------------------------------
@mixin font-size($size) {
    font-size: map-get($font-size, $size);
}

// -----------------------------------------------------------------------------
// Font weight
// Usage: @include font-weight(bold);
// -----------------------------------------------------------------------------
@mixin font-weight($weight) {
    font-weight: map-get($font-weight, $weight);
}

// -----------------------------------------------------------------------------
// Letter spacing
// Usage: @include letter-spacing(tight);
// -----------------------------------------------------------------------------
@mixin letter-spacing($value) {
    letter-spacing: map-get($letter-spacing, $value);
}

// -----------------------------------------------------------------------------
// Flex
// Usage: @include flex(row, space-between, center);
// -----------------------------------------------------------------------------
@mixin flex($direction, $justify, $align) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// -----------------------------------------------------------------------------
// Text truncate
// Usage: @include text-truncate;
// -----------------------------------------------------------------------------
@mixin text-truncate {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}