@use "abstracts/variables" as *;
@use "base/colors" as *;
@use "abstracts/mixins" as *;
@use "base/animations" as *;

.consultoria-hero-section {
  position: relative;
  width: 100vw;
  left: 50%;
  transform: translateX(-50%);
  height: fit-content;
  background: linear-gradient(
    to bottom,
    $white 0%,
    $white 80px,
    $black 80px,
    $black 100%
  );
  @include section-padding-y();

  &__content {
    position: relative;
    z-index: 3;
    width: 100%;
    @include margin(3xl, y);

    @include min-width(md) {
      @include padding(3xl, x);
    }
  }

  &__label {
    color: $white;
    font-weight: 400 !important;

    @include min-width(xl) {
      @include padding(3xl, x);
    }
  }

  &__image-container {
    position: relative;
    width: 90%;
    height: 50vh; // Same as floating images
    min-height: 250px; // Same as floating images
    opacity: 0;
    overflow: hidden;
    box-shadow: 0 20px 40px rgba($black, 0.3);
    margin-left: auto;
    margin-bottom: 2rem; // Same spacing

    @include min-width(md) {
      width: 80%;
      height: 45vh;
      margin-bottom: 0;
    }

    @include min-width(lg) {
      width: 70%;
      height: 90vh;
    }

    @include min-width(xl) {
      width: 90%;
    }
  }

  &__image-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    will-change: transform;
    @include z-index(default);

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      @include transition(transform, slow);
      will-change: transform;
    }
  }

  &__overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba($black, 0), rgba($black, 0.2));
    z-index: 1;
  }

  &__bottom-content {
    position: relative;
    z-index: 3;
    width: 100%;
    @include margin(2xl, top);

    @include min-width(md) {
      @include margin(4xl, top);
      @include padding(3xl, x);
    }
  }

  &__description {
    color: $white;
    margin-right: auto;
    @include margin(md, bottom);
    text-align: left;

    @include min-width(md) {
      @include margin(3xl, bottom);
    }
  }

  &__columns {
    @include flex(column, center, center);
    max-width: 1000px;

    @include min-width(md) {
      flex-direction: row;
      align-items: start;
      @include gap(5xl);
      margin-left: auto;
    }
  }

  &__column {
    flex: 1;
    display: flex;
    flex-direction: column;
    @include gap(lg);
  }

  &__column-text {
    color: $white;
  }
}

.random-images {
  position: relative;
  width: 100%;
  @include z-index(above);
  display: flex;
  flex-direction: column; // Stack on mobile

  @include container-width(mobile);
  margin-inline: auto;

  @include min-width(md) {
    @include container-width(tablet);
    @include padding(xl, x);
    min-height: 75vh;
    display: block; // Reset to normal positioning on desktop
  }

  @include min-width(lg) {
    @include container-width(smalldesktop);
    min-height: 80vh;
  }

  @include min-width(xl) {
    @include container-width(desktop);
  }

  &__container {
    position: relative;
    width: 100%; // Full width on mobile
    height: 40vh; // Shorter height on mobile
    min-height: 200px; // Smaller min-height
    margin-bottom: 1.5rem; // Tighter spacing
    margin-left: auto;
    margin-right: auto;
    overflow: hidden;
    background-color: $white;
    box-shadow: 0 10px 15px -3px rgba($black, 0.1),
      0 4px 6px -2px rgba($black, 0.05);
    @include border-radius(md);
    will-change: transform;
    @include transition(transform, normal);
    @include transition(box-shadow, normal);

    &:hover {
      transform: translateY(-8px);
      box-shadow: 0 12px 25px rgba($black, 0.2);
    }

    // Last item no margin bottom
    &:last-child {
      margin-bottom: 0;
    }

    @include min-width(md) {
      position: absolute;
      margin: 0;
      width: 90%;
      height: 60vw;
    }

    &--1 {
      @include min-width(md) {
        width: 75%;
        height: 30vh;
        top: 5vh;
        left: 5%;
      }

      @include min-width(lg) {
        width: 40%;
        height: 85vh;
        top: -10vh;
        left: 0;
      }
    }

    &--2 {
      @include min-width(md) {
        width: 50%;
        height: 30vh;
        top: 30vh;
        right: 0;
      }

      @include min-width(lg) {
        width: 50%;
        height: 60vh;
        top: 0;
        right: 0;
      }
    }

    &--3 {
      @include min-width(md) {
        width: 40%;
        height: 30vh;
        top: 45vh;
        right: 45%;
      }

      @include min-width(lg) {
        width: 45%;
        height: 40vh;
        top: 45vh;
        right: 10%;
      }

      @include min-width(xl) {
        width: 25%;
      }
    }
  }

  &__inner-container {
    position: relative; // Remove absolute positioning on mobile
    width: 100%; // Full width on mobile
    height: 100%; // Full height on mobile
    overflow: hidden;
    will-change: transform;

    @include min-width(md) {
      position: absolute; // Only absolute on desktop
      top: -15%;
      left: -10%;
      width: 120%;
      height: 130%;
    }
  }

  &__img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important;
    object-fit: cover !important;
    object-position: center !important;
    will-change: transform;
    @include transition(transform, slow);
    opacity: 0.98;

    @include min-width(md) {
      object-position: center center !important;
      transform: scale(1.05);
    }
  }

  &__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, rgba($black, 0), rgba($black, 0.05));
    z-index: 3;
    opacity: 0.3;
  }
}