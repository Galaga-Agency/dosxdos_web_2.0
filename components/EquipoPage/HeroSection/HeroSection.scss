@use "abstracts/variables" as *;
@use "base/colors" as *;
@use "abstracts/mixins" as *;
@use "base/animations" as *;

.hero-section {
  position: relative;
  width: 100vw;
  left: 50%;
  transform: translateX(-50%);
  height: 100vh;
  @include margin(xl, bottom);
  overflow: hidden;
  @include flex(column, flex-end, stretch);

  &__image-container {
    position: relative;
    width: 100%;
    height: 100%;
    opacity: 0;
    @include flex(column, flex-end, stretch);
  }

  &__image-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; // No parallax on mobile
    will-change: transform;
    @include z-index(default);

    @include min-width(md) {
      height: 130%; // Parallax only on desktop
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      @include transition(transform, slow, cubic-bezier(0.25, 1, 0.5, 1));
      will-change: transform;
    }
  }

  &__overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba($black, 0), rgba($black, 0.7));
    @include z-index(above);
  }

  &__content {
    position: relative;
    @include z-index(header);
    width: 100%;
    @include padding(4xl, bottom);

    @include min-width(md) {
      @include padding(6xl, bottom);
    }
  }

  &__label {
    @include font-size(lg);
    font-family: "Sarabun";
    font-style: normal;
    font-weight: 100 !important;
    @include margin(md, bottom);
    color: $white;
    font-style: italic;

    @include min-width(xl) {
      position: absolute;
      left: 0;
      top: -3rem;
    }
  }
}

.random-images {
  position: relative;
  width: 100%;
  @include z-index(above);
  @include margin(xl, y);
  @include container-width(mobile);
  margin-inline: auto;
  display: flex;
  flex-direction: column; // Stack on mobile

  @include min-width(md) {
    @include container-width(tablet);
    @include padding(xl);
    min-height: 60vh; // Reduced from 75vh
    display: block; // Reset to positioning on desktop
  }

  @include min-width(lg) {
    @include container-width(smalldesktop);
    min-height: 65vh; // Reduced from 80vh
  }

  @include min-width(xl) {
    @include container-width(desktop);
    min-height: 70vh;
  }

  &__container {
    position: relative;
    width: 100%;
    height: 35vh; // Reduced from 40vh
    min-height: 180px; // Reduced from 200px
    margin-bottom: 1rem; // Reduced spacing
    overflow: hidden;
    background-color: $white;
    box-shadow: 0 10px 15px -3px rgba($black, 0.1),
      0 4px 6px -2px rgba($black, 0.05);
    @include border-radius(md);
    @include transition(transform, normal, ease);
    @include transition(box-shadow, normal, ease);

    &:hover {
      transform: translateY(-8px);
      box-shadow: 0 12px 25px rgba($black, 0.2);
    }

    // Last item no margin bottom
    &:last-child {
      margin-bottom: 0;
    }

    // Desktop positioning - more conservative sizes
    @include min-width(md) {
      position: absolute;
      margin: 0;
      @include margin(xl, bottom);
    }

    &--1 {
      @include min-width(md) {
        width: 55%;
        height: 25vh;
        top: 5vh;
        left: 5%;
      }

      @include min-width(lg) {
        width: 45%; 
        height: 45vh; 
        top: 0;
        left: 0%;
      }

      @include min-width(xl) {
        width: 45%;
        height: 50vh;
      }
    }

    &--2 {
      @include min-width(md) {
        width: 45%; 
        height: 22vh; 
        top: 25vh;
        right: 5%; 
      }

      @include min-width(lg) {
        width: 50%; 
        height: 35vh; 
        top: 3vh;
        right: 0;
      }

      @include min-width(xl) {
        width: 42%;
        height: 40vh;
      }
    }

    &--3 {
      @include min-width(md) {
        width: 35%; // Reduced from 40%
        height: 25vh; // Reduced from 30vh
        top: 35vh; 
        right: 35%;
      }

      @include min-width(lg) {
        width: 32%; // Reduced from 45%
        height: 40vh; // Reduced from 50vh
        top: 30vh;
        right: 15%;
      }

      @include min-width(xl) {
        width: 20%; // More conservative size
        height: 40vh;
        right: 18%;
      }
    }
  }

  &__inner-container {
    position: relative; // No absolute positioning on mobile
    width: 100%;
    height: 100%;
    overflow: hidden;
    top: 0;
    left: 0;

    // Desktop - more conservative parallax positioning
    @include min-width(md) {
      position: absolute;
      top: -20%; // Reduced from -30%
      left: -10%; // Reduced from -15%
      width: 120%; // Reduced from 130%
      height: 140%; // Reduced from 160%
      will-change: transform;
    }
  }

  &__img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important;
    object-fit: cover !important;
    object-position: center !important;
    opacity: 0.95;

    // Mobile - no animation
    transition: none;
    will-change: auto;

    // Desktop - smooth animations
    @include min-width(md) {
      will-change: transform;
      @include transition(transform, very-slow, cubic-bezier(0.33, 1, 0.68, 1));
    }
  }

  &__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, rgba($black, 0), rgba($black, 0.1));
    @include z-index(header);
  }
}