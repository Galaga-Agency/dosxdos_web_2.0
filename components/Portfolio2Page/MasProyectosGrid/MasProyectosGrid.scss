@use "abstracts/variables" as *;
@use "base/colors" as *;
@use "abstracts/mixins" as *;

.mas-proyectos-container {
  position: relative;
  width: 100%;
  height: auto;
  overflow-x: hidden;
}

.mas-proyectos-grid {
  display: flex;
  flex-direction: column;
  @include gap(sm);
  
  width: 100%;
  @include padding(sm, x);
  margin: 0 auto;
  position: relative;
  overflow: visible;
  height: auto;
  box-sizing: border-box;

  @include min-width(md) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    width: 100%;
    gap: clamp(3rem, 6vw, 4rem) clamp(2rem, 4vw, 3rem); // Reduced gaps
    @include padding(md, x);
    justify-items: center; // Center items horizontally
  }

  @include min-width(lg) {
    width: 100%;
    @include padding(lg, x); // Balanced padding
    @include padding(5xl, y);
    gap: clamp(4rem, 8vw, 6rem) clamp(3rem, 6vw, 4rem); // Reduced from huge gaps
    justify-items: center;
  }

  @include min-width(xl) {
    gap: clamp(5rem, 10vw, 8rem) clamp(4rem, 8vw, 6rem); // Much smaller than before
    width: 100%;
    @include padding(lg, x); // More balanced padding
    justify-items: center;
  }
}

// Base grid item styling
.item {
  position: relative;
  display: block;
  width: 100%;
  overflow: hidden;
  text-decoration: none;
  will-change: transform;
  opacity: 0;
  box-sizing: border-box;
  height: clamp(280px, 50vh, 400px);

  @include min-width(md) {
    max-width: 100%;
    height: auto;
  }

  &__image-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    
    &.loading {
      background-color: rgba($secondary-color, 0.3);
      
      &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 20px;
        margin: -10px 0 0 -10px;
        border: 2px solid rgba($primary-color, 0.3);
        border-top-color: $primary-color;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
    }
    
    &.loaded {
      .item-image {
        opacity: 1;
      }
    }
  }

  &-image {
    object-fit: cover;
    width: 100% !important;
    height: 100% !important;
    transform: scale(1.2);
    position: absolute !important;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    @include transition(opacity, normal);
  }

  &__overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(
      to top,
      rgba($black, 0.8) 0%,
      rgba($black, 0.3) 50%,
      rgba($black, 0) 100%
    );
    z-index: 1;
    @include transition(height, normal);
  }

  &__content {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    @include padding(md);
    background: linear-gradient(to top, rgba(0, 0, 0, 0.7), transparent);
    @include z-index(above);
    box-sizing: border-box;
  }

  &__title {
    color: $white;
    @include font-size(xl);
    margin: 0;
    word-wrap: break-word;
    hyphens: auto;
  }

  // Random layout with varied heights inspired by the reference code
  &.item-1 {
    @include min-width(md) {
      height: clamp(400px, 35vh, 450px); // Medium height
      width: 100%;
      transform: translate(0px, clamp(40px, 8vh, 80px));
      margin-bottom: clamp(2rem, 5vw, 4rem);
    }

    @include min-width(xxl) {
      width: min(650px, 100%);
    }
  }

  &.item-2 {
    @include min-width(md) {
      height: clamp(600px, 60vh, 820px); // Tall vertical
      width: 100%;
    }

    @include min-width(xxl) {
      width: min(650px, 100%);
    }
  }

  &.item-3 {
    @include min-width(md) {
      height: clamp(450px, 45vh, 580px); // Medium-tall
      width: 100%;
      transform: translate(0px, clamp(-80px, -10vh, -120px));
      margin-left: 0;
      margin-top: clamp(2rem, 5vw, 4rem);
    }

    @include min-width(xxl) {
      width: min(440px, 100%);
      margin-left: min(15rem, 20%);
    }
  }

  &.item-4 {
    @include min-width(md) {
      height: clamp(320px, 30vh, 399px); // Short
      width: 100%;
      margin-left: 0;
      margin-block: clamp(1.5rem, 3vw, 3rem);
    }

    @include min-width(xxl) {
      width: min(332px, 100%);
      margin-left: min(10rem, 15%);
    }
  }

  &.item-5 {
    @include min-width(md) {
      height: clamp(720px, 72vh, 900px); // Very tall vertical
      width: 100%;
      margin-bottom: clamp(1rem, 2vw, 2rem);
    }

    @include min-width(xxl) {
      width: min(491px, 100%);
    }
  }

  &.item-6 {
    @include min-width(md) {
      height: clamp(380px, 38vh, 455px); // Medium height
      width: 100%;
      margin-bottom: clamp(1rem, 2vw, 2rem);
    }

    @include min-width(xxl) {
      width: min(581px, 100%);
    }
  }
}

// Reveal More Section
.reveal-more-container {
  @include flex(column, center, center);
  @include margin(xl, top);
  width: 100%;
  box-sizing: border-box;
}

// Loading animation
@keyframes spin {
  0% { 
    transform: rotate(0deg); 
  }
  100% { 
    transform: rotate(360deg); 
  }
}

// Ensure proper spacing on very large screens
@include min-width(xxxl) {
  .mas-proyectos-grid {
    @include padding(xl, x); // Balanced padding
    gap: clamp(6rem, 12vw, 10rem) clamp(5rem, 10vw, 8rem); // Reasonable gaps
    justify-items: center;
  }
}