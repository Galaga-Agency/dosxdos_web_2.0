@use "abstracts/variables" as *;
@use "base/colors" as *;
@use "abstracts/mixins" as *;

.secondary-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.3rem 1rem; // Base padding (will be overridden by size classes)
  color: $white;
  @include border-radius(lg);
  @include font-weight(medium);
  @include font-size(base);
  text-decoration: none;
  text-align: center;
  position: relative;
  cursor: pointer;
  text-wrap: nowrap; // Add this to primary button too for consistency
  overflow: hidden;
  background-color: rgba($white, 0.08);
  border: 1px solid rgba($white, 0.2);
  box-shadow: 0 4px 12px rgba($black, 0.1);
  transition: all 0.3s cubic-bezier(0.19, 1, 0.22, 1); // ADDED to match primary button

  // The blur background element
  &__blur-bg {
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: rgba($white, 0.05);
    -webkit-filter: blur(20px);
    -moz-filter: blur(20px);
    -o-filter: blur(20px);
    -ms-filter: blur(20px);
    filter: blur(20px);
    z-index: 1;
    pointer-events: none;
    opacity: 0.5;

    // Add colored shadows to give it texture
    box-shadow: inset 0 0 40px rgba($primary-color, 0.1),
      inset 0 0 60px rgba($white, 0.1);

    // Add subtle gradient
    background-image: linear-gradient(
      45deg,
      rgba($white, 0.03) 0%,
      rgba($white, 0.08) 50%,
      rgba($white, 0.01) 100%
    );
  }

  // Hover effect
  &:hover {
    background-color: rgba($white, 0.1);
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba($black, 0.15);
    border-color: rgba($white, 0.25);

    .secondary-button__blur-bg {
      opacity: 0.6;
      filter: blur(15px);
    }
  }

  // Active state
  &:active {
    transform: translateY(0);
    background-color: rgba($white, 0.15);
    box-shadow: 0 2px 8px rgba($black, 0.1);

    .secondary-button__blur-bg {
      opacity: 0.7;
      filter: blur(10px);
    }
  }

  // Light background variant
  &--light-bg {
    background-color: rgba($secondary-color, 0.2);
    color: $black;
    border-color: rgba($black, 0.1);

    .secondary-button__blur-bg {
      background: rgba($secondary-color, 0.1);
      opacity: 0.4;

      // Adjusted shadows for light background
      box-shadow: inset 0 0 40px rgba($black, 0.05),
        inset 0 0 60px rgba($white, 0.2);

      // Adjusted gradient
      background-image: linear-gradient(
        45deg,
        rgba($secondary-color, 0.05) 0%,
        rgba($secondary-color, 0.1) 50%,
        rgba($secondary-color, 0.02) 100%
      );
    }

    &:hover {
      background-color: rgba($secondary-color, 0.3);
      border-color: rgba($black, 0.15);

      .secondary-button__blur-bg {
        opacity: 0.5;
      }
    }

    &:active {
      background-color: rgba($secondary-color, 0.4);
      border-color: rgba($black, 0.2);

      .secondary-button__blur-bg {
        opacity: 0.6;
      }
    }
  }

  // Size variations - KEEP THESE THE SAME AS PRIMARY BUTTON
  &--small {
    padding: 0.4rem 1rem;
    @include font-size(sm);
  }

  &--medium {
    padding: 0.6rem 1.5rem;
    @include font-size(base);
  }

  &--large {
    padding: 0.8rem 1.75rem;
    @include font-size(lg);
  }

  // Full width variation
  &--full-width {
    width: 100%;
    display: flex;
  }

  // Outlined variation
  &--outlined {
    background-color: rgba($white, 0.02);
    border: 1px solid rgba($white, 0.25);

    .secondary-button__blur-bg {
      opacity: 0.3;
    }

    &:hover {
      background-color: rgba($white, 0.05);
      border-color: rgba($white, 0.35);

      .secondary-button__blur-bg {
        opacity: 0.4;
      }
    }

    &:active {
      background-color: rgba($white, 0.1);

      .secondary-button__blur-bg {
        opacity: 0.5;
      }
    }

    // Combine with light background
    &.secondary-button--light-bg {
      background-color: transparent;
      border: 1px solid rgba($black, 0.15);
      color: $black;

      &:hover {
        background-color: rgba($secondary-color, 0.1);
        border-color: rgba($black, 0.25);
      }

      &:active {
        background-color: rgba($secondary-color, 0.2);
      }
    }
  }

  // Disabled state
  &--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
    background-color: rgba($white, 0.02);
    color: rgba($white, 0.7);
    border-color: rgba($white, 0.1);
    box-shadow: none;

    .secondary-button__blur-bg {
      opacity: 0.2;
    }

    &.secondary-button--light-bg {
      background-color: rgba($secondary-color, 0.1);
      color: rgba($black, 0.5);
      border-color: rgba($black, 0.1);
    }
  }

  &__content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    position: relative;
    z-index: 2;
  }

  // Add responsive adjustments to match primary button
  @include min-width(md) {
    letter-spacing: 0.03em;
  }

  @media screen and (max-width: 1400px) {
    @include responsive-font-size(0.9rem, 0.8rem);

    &--small {
      @include responsive-font-size(0.8rem, 0.7rem);
    }

    &--large {
      @include responsive-font-size(1rem, 0.9rem);
    }
  }
}
