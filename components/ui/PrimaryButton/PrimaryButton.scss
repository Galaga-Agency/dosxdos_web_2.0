@use "abstracts/variables" as *;
@use "base/colors" as *;
@use "abstracts/mixins" as *;

.primary-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.3rem 1rem;
  background-color: rgba($black, 0.7);
  color: $secondary-color;
  @include border-radius(lg);
  @include font-weight(semibold);
  @include font-size(base);
  text-decoration: none;
  transition: all 0.3s cubic-bezier(0.19, 1, 0.22, 1);
  text-align: center;
  text-shadow: rgba($black, 0.1);
  position: relative;
  overflow: hidden;
  cursor: pointer;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  text-transform: capitalize;
  will-change: transform, background-color, box-shadow;
  box-shadow: 0 4px 15px rgba($black, 0.1), inset 0 0 0 1px rgba($white, 0.1);

  // Context-based styling - for dark backgrounds
  &--on-dark {
    background-color: rgba($white, 0.2);
    color: $white;
    box-shadow: 0 4px 15px rgba($black, 0.15), inset 0 0 0 1px rgba($white, 0.2);
    
    &:hover {
      background-color: rgba($white, 0.25);
      box-shadow: 0 8px 20px rgba($black, 0.2), inset 0 0 0 1px rgba($white, 0.25);
    }
    
    &:active {
      background-color: rgba($white, 0.3);
      box-shadow: 0 4px 8px rgba($black, 0.2), inset 0 0 0 1px rgba($white, 0.3);
    }
  }
  
  // Context-based styling - for light backgrounds
  &--on-light {
    background-color: rgba($black, 0.7);
    color: $white;
    box-shadow: 0 4px 15px rgba($black, 0.1), inset 0 0 0 1px rgba($white, 0.1);
    
    &:hover {
      background-color: rgba($black, 0.75);
      box-shadow: 0 8px 20px rgba($black, 0.15), inset 0 0 0 1px rgba($white, 0.15);
    }
    
    &:active {
      background-color: rgba($black, 0.8);
      box-shadow: 0 4px 8px rgba($black, 0.15), inset 0 0 0 1px rgba($white, 0.1);
    }
  }
  
  // Glass background
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba($white, 0.2) 0%,
      rgba($white, 0.05) 50%,
      rgba($white, 0) 100%
    );
    z-index: -1;
    border-radius: inherit;
  }

  &:hover {
    background-color: rgba(darken($black, 5%), 0.6);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba($black, 0.15),
      inset 0 0 0 1px rgba($white, 0.15);
  }

  &:active {
    transform: translateY(0);
    box-shadow: 0 4px 8px rgba($black, 0.15), inset 0 0 0 1px rgba($white, 0.1);
    background-color: rgba(darken($black, 8%), 0.7);
  }

  // Size variations
  &--small {
    padding: 0.5rem 1rem;
    @include font-size(sm);
  }

  &--medium {
    padding: 0.75rem 1.5rem;
    @include font-size(base);
  }

  &--large {
    padding: 1rem 2rem;
    @include font-size(lg);
  }

  // Full width variation
  &--full-width {
    width: 100%;
    display: flex;
  }

  // Disabled state
  &--disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;

    &:hover {
      transform: none;
      box-shadow: 0 4px 15px rgba($black, 0.1),
        inset 0 0 0 1px rgba($white, 0.1);
      background-color: rgba($black, 0.5);
    }
  }

  // Responsive adjustments
  @include min-width(md) {
    // Additional styling for larger screens if needed
  }

  @media screen and (max-width: 1400px) {
    @include responsive-font-size(0.9rem, 0.8rem);

    &--small {
      @include responsive-font-size(0.8rem, 0.7rem);
    }

    &--large {
      @include responsive-font-size(1rem, 0.9rem);
    }
  }

  &__content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    position: relative;
    z-index: 1;
  }
}